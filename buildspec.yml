version: 0.2
phases:
  pre_build:
    commands:
      - echo "Authenticating with ECR..."
      - aws ecr get-login-password --region $ECR_REGION | docker login --username AWS --password-stdin $ACCOUNT_NUMBER.dkr.ecr.$ECR_REGION.amazonaws.com
      - REPOSITORY_URI=$ACCOUNT_NUMBER.dkr.ecr.$ECR_REGION.amazonaws.com/$ECR_REPO_NAME
      # - REPOSITORY_URI=$ACCOUNT_NUMBER.dkr.ecr.$ECR_REGION.amazonaws.com/$ECR_REPO_NAME
      # 891377162652.dkr.ecr.us-west-2.amazonaws.com/nodejs-ecs-demo-app
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:-latest}
  build:
    commands:
      - echo "Building base image..."
      - docker build -t $REPOSITORY_URI/base:$IMAGE_TAG -f base/Dockerfile .
      
      - echo "Building service image..."
      - docker build -t $REPOSITORY_URI/service:$IMAGE_TAG -f service/Dockerfile .
  post_build:
    commands:
      - echo "Pushing images to ECR..."
      - docker push $REPOSITORY_URI/base:$IMAGE_TAG
      - docker push $REPOSITORY_URI/service:$IMAGE_TAG
      - echo "Generating deployment artifacts..."
      - printf '[{"name":"service","imageUri":"%s"}]' $REPOSITORY_URI/service:$IMAGE_TAG > imagedefinitions.json
artifacts:
  files: imagedefinitions.json
